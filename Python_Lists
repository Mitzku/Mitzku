heights = [61, 70, 67, 64, 65]

sam_height = ['Sam', 67]

ages = [['Aaron', 15], ['Dhruti', 16]]



names = ['Jenny', 'Alexus', 'Sam', 'Grace']
dogs_names = ['Elphonse', 'Dr. Doggy DDS', 'Carter', 'Ralph']

names_and_dogs_names  = zip(names, dogs_names)

list_of_names_and_dogs_names = list(names_and_dogs_names)

print(list_of_names_and_dogs_names)



my_empty_list = []



orders = ['daisies', 'periwinkle']
orders.append('tulips')
orders.append('roses')
print(orders)


orders = ['daisy', 'buttercup', 'snapdragon', 'gardenia', 'lily']
# Create new orders here:
new_orders = orders + ['lilac', 'iris']

broken_prices = [5, 3, 4, 5, 4] + [4]
print(broken_prices)



list1 = range(9)
list2 = range(8)

list1 = range(5, 15, 3)
list2 = range(0, 40, 5)


first_names = ['Ainsley', 'Ben', 'Chani', 'Depak']
age = []
age.append(42)
all_ages = [32, 41, 29] + age

name_and_age = zip(first_names, age)

ids = range(4)



.extend allows me to add complete lists to each other
my_range1 = [2, 9]
my_range2 = [2, 9, 2]
my_range1.extend(my_range2)
print(my_range1)


.insert allows me to specify the location and the value that’s added.
my_range1.insert(1, “maria”)
print(my_range1)
[2, 'maria', 9, 2, 9, 2]


.remove allows me to remove a specific item from the list
my_range1.remove("maria")
print(my_range1)
[2, 9, 2, 9, 2]

.clear empties the list
my_range1.clear()
print(my_range1)
[]

.pop removes the last element in a list
my_range2 = [2, 9, 3]
my_range2.pop()
print(my_range2)
[2, 9]

.sort allows to sort a list in descending order
my_range2 = [2, 9, 3]
my_range2.sort
print(my_range2)

.reverse allows to reverse a list
my_range2.reverse()
print(my_range2)
[3, 9, 2]

.copy allows me to copy a list 
My_range_copy = my_range2.copy()
print(my_range_copy)




last_semester_gradebook = [("politics", 80), ("latin", 96), ("dance", 97), ("architecture", 65)]

subjects = ['physics', 'calculus', 'poetry', 'history']
grades =  [98, 97, 85, 88]
subjects.append('computer science')
grades.append(100)

gradebook = list(zip(subjects, grades))

gradebook.append(("visual arts", 93))

full_gradebook = last_semester_gradebook + gradebook
print(full_gradebook)




list1 = range(2, 20, 3)
list1_len = len(list1)
print(list1_len)



employees = ['Michael', 'Dwight', 'Jim', 'Pam', 'Ryan', 'Andy', 'Robert']
index4 = employees[4]
print(len(employees))
print(employees[2])




shopping_list = ['eggs', 'butter', 'milk', 'cucumbers', 'juice', 'cereal']

print(len(shopping_list))

last_element = shopping_list[-1]

element5 =shopping_list[4]


print(element5, last_element)


suitcase = ['shirt', 'shirt', 'pants', 'pants', 'pajamas', 'books']

beginning = suitcase[0:4]

print(beginning)

middle = suitcase[2:4]
print(middle)


suitcase = ['shirt', 'shirt', 'pants', 'pants', 'pajamas', 'books']


start = suitcase[:3]
end = suitcase[-2:]


votes = ['Jake', 'Jake', 'Laurie', 'Laurie', 'Laurie', 'Jake', 'Jake', 'Jake', 'Laurie', 'Cassie', 'Cassie', 'Jake', 'Jake', 'Cassie', 'Laurie', 'Cassie', 'Jake', 'Jake', 'Cassie', 'Laurie']


jake_votes = votes.count('Jake')
print(jake_votes)



names = ['Ron', 'Hermione', 'Harry', 'Albus', 'Sirius']
names.sort()


games = ['Portal', 'Minecraft', 'Pacman', 'Tetris', 'The Sims', 'Pokemon']

games_sorted = sorted(games)
print(games, games_sorted)


inventory = ['twin bed', 'twin bed', 'headboard', 'queen bed', 'king bed', 'dresser', 'dresser', 'table', 'table', 'nightstand', 'nightstand', 'king bed', 'king bed', 'twin bed', 'twin bed', 'sheets', 'sheets', 'pillow', 'pillow']

inventory_len = len(inventory)
first = inventory[0]
last = inventory[-1]
inventory_2_6 = inventory[2:6]
first_3 = inventory[:3]
twin_beds = inventory.count('twin bed')
inventory.sort()



*PRACTICE*
toppings = ['pepperoni', 'pineapple', 'cheese', 'sausage', 'olives', 'anchovies', 'mushrooms']

price = [2, 6, 1, 3, 2, 7, 2]

num_pizzas = len(toppings)

print("We sell "+ str(num_pizzas)+ " different kinds of pizza!")

pizzas = list(zip(price, toppings))
pizzas.sort()

print(pizzas)

cheapest_pizza = pizzas[0]
priciest_pizza = pizzas[-1]

three_chepeast = pizzas[0:3]

print(three_chepeast)

num_two_dollar_slices = price.count(2)
print(num_two_dollar_slices)


def append_sum(lst):
  lst.append(lst[-1] + lst[-2])
  lst.append(lst[-1] + lst[-2])
  lst.append(lst[-1] + lst[-2])
  return lst


def larger_list(lst1, lst2):
  if len(lst1) == len(lst2):
    return lst1[-1]
  elif len(lst1) < len(lst2):
    return lst2[-1]
  else:
    return lst1[-1]


def more_than_n(lst, item, n):
  if lst.count(item) > n:
    return True
  else:
    return False

def append_size(lst):
  lst.append(len(lst))
  return lst
 
 
 def every_three_nums(start):
  result = range(start, 101, 3)
  return list(result)
  
  
 def remove_middle(lst, start, end):
  front = lst[:start] 
  back = lst[end+1:]
  return front + back
  
  def more_frequent_item(lst, item1, item2):
  if lst.count(item1) == lst.count(item2):
    return item1
  elif lst.count(item1) > lst.count(item2):
    return item1
  else:
    return item2
    
  
  
  def double_index(lst, index):
  if index < len(lst):
    number = lst[index]*2
    lst.remove(lst[index])
    lst.insert(index, number)
    return lst
  else:
    return lst

  
 print(double_index([3, 8, -10, 12], 2))
 
 
 
 
 def middle_element(lst):
  if len(lst) % 2 != 0:
    middle = int(len(lst)/2)
    index = lst[middle]
    return index
  else:
    middle = int(len(lst)/2)
    middle1 = int(len(lst)/2) -1
    avg = (lst[middle] + lst[middle1]) / 2
    return avg

print(middle_element([5, 2, -10, -4, 4, 5]))



nums = [5, -10, 40, 20, 0]
greater_than_two = [num > 2 for num in nums]
print(greater_than_two)


nested_lists = [[4, 8], [16, 15], [23, 42]]
greater_than = [item1 > item2 for (item1, item2) in nested_lists]
print(greater_than)


nested_lists = [[4, 8], [16, 15], [23, 42]]
first_only = [item1 for (item1, item2) in nested_lists]
print(first_only)


a = [1.0, 2.0, 3.0]
b = [4.0, 5.0, 6.0]
combined = zip(a, b)
sums = [item1 + item2 for (item1, item2) in combined]

*easier* 
sums = [item1 + item2 for (item1, item2) in zip(a, b)]


a = [1.0, 2.0, 3.0]
b = [4.0, 5.0, 6.0]
quotients = [itemb/itema for (itema, itemb) in zip(a, b)]



capitals = ["Santiago", "Paris", "Copenhagen"]
countries = ["Chile", "France", "Denmark"]
locations = [capital + ", " + country for (capital, country) in zip(capitals, countries)]


names = ["Jon", "Arya", "Ned"]
ages = [14, 9, 35]
users = ["Name: " + name + ", Age: " + str(age) for (name, age) in zip(names, ages)]
print(users)

a = [30, 42, 10]
b = [15, 16, 17]
greater_than = [item1 > item2 for (item1, item2) in zip(a, b)]
