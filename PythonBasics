print("Hello world!")

# We've defined the variable "meal" here to the name of the food we ate for breakfast!
meal = "An english muffin"

# Printing out breakfast
print("Breakfast:")
print(meal)

# Now update meal to be lunch!
meal = "rice"

# Printing out lunch
print("Lunch:")
print(meal)

# Now update "meal" to be dinner
meal = "salad"

# Printing out dinner
print("Dinner:")
print(meal)


# Define the release and runtime integer variables below:
release_year = 1990
runtime = 128


# Define the rating_out_of_10 float variable below: 
rating_out_of_10 = 8.5


print (25 * 68 + 13 / 28)

quilt_width = 8
quilt_length = 12

print(quilt_width * quilt_length)

quilt_length = 8
print(quilt_width * quilt_length)


# 6x6 quilt
print(6 ** 2)

# 7x7 quilt
print(7 ** 2)

# 8x8 quilt
print(8 ** 2)

# How many squares for 6 people to have 6 quilts each that are 6x6?
print(6 ** 4)


my_team = (27 % 4)
print(my_team)


message = string1 + string2 + string3 + string4 + string5 + string6
print(message)



total_price = 0

new_sneakers = 50.00

total_price += new_sneakers

nice_sweater = 39.00
fun_books = 20.00
# Update total_price here:
total_price += fun_books + nice_sweater

print("The total price is", total_price)

# Assign the string here
to_you = """Stranger, if you passing meet me and desire to speak to me, why
  should you not speak to me?
And why should I not speak to you?"""


print(to_you)


*Shape*
print("   /|")
print("  / |")
print(" /  |")
print("/___|")


*Project*

lovely_loveseat_description = "Lovely Loveseat.\nTufted polyester blend on wood. 32 inches high x 40 inches wide x 30 inches deep. Red or white.\n \n"

lovely_loveseat_price = 254.00

stylish_settee_description = "Stylish Settee. Faux leather on birch. 29.50 inches high x 54.75 inches wide x 28 inches deep. Black."

stylish_settee_price = 180.50

luxurious_lamp_description = "Luxurious Lamp.\nGlass and iron. 36 inches tall. Brown with cream shade.\n"

luxurious_lamp_price = 52.15

sales_tax = 0.088


customer_one_total = 0
customer_one_itemization ="\n"

customer_one_total += lovely_loveseat_price

customer_one_itemization += lovely_loveseat_description

customer_one_total += luxurious_lamp_price

customer_one_itemization += luxurious_lamp_description

customer_one_tax = customer_one_total * sales_tax

customer_one_total += customer_one_tax

print("Customer One Items")
print(customer_one_itemization)
print("Customer One Total")
print(customer_one_total)





def sing_song():
  print("You may say I'm a dreamer")
  print("But I'm not the only one")
  print("I hope some day you'll join us")
  print("And the world will be as one")
  
# call sing_song() below:
sing_song()




def about_this_computer():
	print("This computer is running on Whackintosh version              Everest Puma")
print("This is your desktop")

about_this_computer()


def mult_two_add_three(number):
  print(number*2 + 3)
  
# Call mult_two_add_three() here:
mult_two_add_three(0)


def mult_x_add_y(number, x, y):
  print(number*x + y)
  
mult_x_add_y(1, 3, 1)




# Define create_spreadsheet():
def create_spreadsheet(title, row_count="1000"):
  print("Creating a spreadsheet called "+title)

# Call create_spreadsheet() below with the required arguments:
create_spreadsheet("Downloads")


# Define create_spreadsheet():
def create_spreadsheet(title, row_count="1000"):
  print("Creating a spreadsheet called "+title + "with " +str(row_count) + " rows")

# Call create_spreadsheet() below with the required arguments:
create_spreadsheet("Downloads ")

create_spreadsheet("Applications ", 10)




def calculate_age(current_year, birth_year):
  age = current_year - birth_year
  return age

my_age = calculate_age(2049,1993)
dads_age = calculate_age(2049,1953)


print("I am " + str(my_age) +" years olf and my dad is "+ str(dads_age) + " years old") 



def get_boundaries(target, margin):
  low_limit = target - margin
  high_limit = target + margin
  return low_limit, high_limit

low, high = get_boundaries(100, 20)

print("Low: " + str(low) + "\nHigh: " + str(high))



current_year = 2048

def calculate_age(birth_year):
  age = current_year - birth_year
  return age

result = calculate_age(1970)

print(result)





def repeat_stuff(stuff, num_repeats = 10):
  return stuff*num_repeats
  

lyrics = repeat_stuff("Row ", 3) + "Your Boat. \n"
song = repeat_stuff(lyrics)
print(song)




*PRACTICE*

# Write your tenth_power function here:
def tenth_power(num):
  return (num ** 10)
    

# Uncomment these function calls to test your tenth_power function:
print(tenth_power(1))

# 1 to the 10th power is 1

print(tenth_power(0))
# 0 to the 10th power is 0

print(tenth_power(2))
# 2 to the 10th power is 1024



# Write your square_root function here:
def square_root(num):
  return (num ** 0.5)

# Uncomment these function calls to test your square_root function:
print(square_root(16))
# should print 4
print(square_root(100))
# should print 10



# Write your win_percentage function here:
def win_percentage(wins, losses):
  percentage = wins / (wins + losses)
  return percentage * 100

# Uncomment these function calls to test your win_percentage function:
print(win_percentage(5, 5))
# should print 50
print(win_percentage(10, 0))
# should print 100


# Write your average function here:
def average(num1, num2):
  result = (num1+ num2) /2
  return result

# Uncomment these function calls to test your average function:
print(average(1, 100))
# The average of 1 and 100 is 50.5
print(average(1, -1))
# The average of 1 and -1 is 0



# Write your remainder function here:

def remainder(num1, num2):
  result = (num1 * 2) % (num2/2)
  return result

# Uncomment these function calls to test your remainder function:
print(remainder(15, 14))
# should print 2
print(remainder(9, 6))
# should print 0


# Write your first_three_multiples function here
def first_three_multiples(num):
  print(num)
  print(num*2)
  print(num*3)
  return num*3
  

  
# Uncomment these function calls to test your first_three_multiples function:
first_three_multiples(10)
# should print 10, 20, 30, and return 30
first_three_multiples(0)
# should print 0, 0, 0, and return 0


# Write your tip function here:
def tip(total, percentage):
  result = (total * percentage) / 100
  return result
  
# Uncomment these function calls to test your tip function:
print(tip(10, 25))
# should print 2.5
print(tip(0, 100))
# should print 0.0


# Write your introduction function here:
def introduction(first_name, last_name):
  result = last_name + ", " + first_name + " " + last_name
  return result
  
# Uncomment these function calls to test your introduction function:
print(introduction("James", "Bond"))
# should print Bond, James Bond
print(introduction("Maya", "Angelou"))
# should print Angelou, Maya Angelou


# Write your dog_years function here:
def dog_years(name, age):
  result = str(name) + ", you are " + str(age*7) + " years old in dog years."  
  return result

# Uncomment these function calls to test your dog_years function:
print(dog_years("Lola", 16))
# should print "Lola, you are 112 years old in dog years"
print(dog_years("Baby", 0))
# should print "Baby, you are 0 years old in dog years"


# Write your lots_of_math function here:
def lots_of_math(a,b,c,d):
  first = a+b
  second = c-d
  third = first*second
  fourth = third % a
  return first, second, third, fourth

# Uncomment these function calls to test your lots_of_math function:
print(lots_of_math(1, 2, 3, 4))
# should print 3, -1, -3, 0
print(lots_of_math(1, 1, 1, 1))
# should print 2, 0, 0, 0



*MORE PRACTICE - Physics Teacher example*

train_mass = 22680
train_acceleration = 10
train_distance = 100

bomb_mass = 1


def f_to_c(f_temp):
  return (f_temp -32) * 5/9

f100_in_celsius = f_to_c(100)

print(f100_in_celsius)

def c_to_f(c_temp):
  f_temp =  (c_temp * (9/5)) + 32
  return f_temp

c0_in_fahrenheit = c_to_f(0)

print (c0_in_fahrenheit)


def get_force(mass, acceleration):
  return mass * acceleration

train_force = get_force(train_mass, train_acceleration)

print(train_force)


print("The GE train supplies "+ str(train_force)+ " Newtons of force.")

c = 3*10**8
def get_energy(mass):
  return mass * c

bomb_energy = get_energy(bomb_mass) * c

print(bomb_energy)

print("A 1kg bomb supplies " + str(bomb_energy) + " Joules.")


def get_work(mass, acceleration, distance):
  force = get_force(mass, acceleration) 
  return force * distance

train_work = get_work(train_mass, train_acceleration, train_distance)

print("The GE train does "+ str(train_work) + " Joules of work over "+ str(train_distance)+ " meters.")



  

