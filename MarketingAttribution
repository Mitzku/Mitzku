SELECT user_id,
   Max(timestamp) AS 'last_touch_at'
FROM page_visits
Where user_id = 10069
GROUP BY user_id;


*write the LAST-touch attribution query and run it.*

With last_touch as (
  Select user_id,
   Max(timestamp) AS 'last_touch_at'
FROM page_visits
GROUP BY user_id)
Select ft.user_id, ft.last_touch_at, pv.utm_source
From last_touch as 'ft'
Join page_visits as 'pv'
  On ft.user_id = pv.user_id
  And ft.last_touch_at = pv.timestamp
Where ft.user_id = 10069;



* ASSIGNMENT * 
How many campaigns and sources does CoolTShirts use? Which source is used for each campaign?

Select Count (Distinct utm_source)
, Count (Distinct utm_campaign) 
From page_visits;

Select Distinct utm_source, utm_campaign 
From page_visits;

Select Distinct page_name
From page_visits;



/*
Here's the first-touch query, in case you need it
*/

WITH first_touch AS (
    SELECT user_id,
        MIN(timestamp) as first_touch_at
    FROM page_visits
    GROUP BY user_id)
SELECT ft.user_id,
    ft.first_touch_at,
    pv.utm_source,
		pv.utm_campaign
FROM first_touch ft
JOIN page_visits pv
    ON ft.user_id = pv.user_id
    AND ft.first_touch_at = pv.timestamp;
    
    
*my solution*

    With first_touch As (
Select user_id, Min(timestamp) as 'first_touch'
From page_visits
Group By user_id)
Select pv.utm_campaign, Count(ft.first_touch)
From page_visits as 'pv'
Join first_touch as 'ft'
On ft.user_id = pv.user_id
And ft.first_touch = pv.timestamp
Group By utm_campaign;


*their solution*
WITH first_touch AS (
    SELECT user_id,
        MIN(timestamp) as first_touch_at
    FROM page_visits
    GROUP BY user_id),
ft_attr AS (
  SELECT ft.user_id,
         ft.first_touch_at,
         pv.utm_source,
         pv.utm_campaign
  FROM first_touch ft
  JOIN page_visits pv
    ON ft.user_id = pv.user_id
    AND ft.first_touch_at = pv.timestamp
)
SELECT ft_attr.utm_source,
       ft_attr.utm_campaign,
       COUNT(*)
FROM ft_attr
GROUP BY 1, 2
ORDER BY 3 DESC;


*How many last touches is each campaign responsible for?*
WITH last_touch AS (
    SELECT user_id,
        Max(timestamp) as last_touch_at
    FROM page_visits
    GROUP BY user_id),
lt_attr AS (
  SELECT lt.user_id,
         lt.last_touch_at,
         pv.utm_source,
         pv.utm_campaign
  FROM last_touch as lt
  JOIN page_visits as pv
    ON lt.user_id = pv.user_id
    AND lt.last_touch_at = pv.timestamp
)
SELECT lt_attr.utm_source,
       lt_attr.utm_campaign,
       COUNT(*)
FROM lt_attr
GROUP BY 2
ORDER BY 3 DESC;

* How many visitors make a purchase? -- Count the distinct users who visited the page named '4 - purchase'.*

With purchase as (
  Select user_id, timestamp
  From page_visits
  Where page_name = '4 - purchase')
Select Count(*) 
From purchase;


* How many last touches on the purchase page is each campaign responsible for? *

With purchase as (
  Select user_id, Max(timestamp) as last_touch
  From page_visits
  Where page_name = '4 - purchase'
  Group By user_id)
Select pv.utm_campaign, pv.page_name, Count(p.user_id)
From purchase as p
Join page_visits as pv
On p.user_id = pv.user_id
And p.last_touch = pv.timestamp
Group By utm_campaign;


